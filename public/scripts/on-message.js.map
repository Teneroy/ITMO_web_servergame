{"version":3,"file":"on-message.js","sourceRoot":"","sources":["../../sources/client/on-message.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,OAAO,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;AAiB7E,SAAS,SAAS,CAAE,WAAwB,EAAE,IAAa;IAE1D,cAAc,CAAE,WAAW,CAAE,CAAA;IAE7B,MAAM,OAAO,GAAG,SAAS,CAAE,IAAI,CAAE,CAAC;IAElC,cAAc,CAAE,WAAW,EAAE,OAAO,CAAE,CAAC;AACxC,CAAC;AAOD,SAAS,SAAS,CAAE,IAAa;IAEhC,IAAK,OAAO,IAAI,KAAK,QAAQ,EAC7B;QACC,OAAO;YACN,IAAI,EAAE,mBAAmB;YACzB,OAAO,EAAE,iBAAiB;SAC1B,CAAC;KACF;IAED,IACA;QACC,OAAO,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,CAAC;KAC1B;IACD,OAAQ,KAAK,EACb;QACC,OAAO;YACN,IAAI,EAAE,mBAAmB;YACzB,OAAO,EAAE,0BAA0B,GAAG,KAAK;SAC3C,CAAC;KACF;AACF,CAAC;AAQD,SAAS,cAAc,CAAE,WAAwB,EAAE,OAAyB;IAE3E,QAAS,OAAO,CAAC,IAAI,EACrB;QACC,KAAK,aAAa;YACjB,SAAS,EAAE,CAAC;YACZ,YAAY,CAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,KAAK,CAAE,CAAC;YACjE,MAAM;QAEP,KAAK,cAAc;YAClB,YAAY,CAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,KAAK,CAAE,CAAC;YACjE,MAAM;QAEP,KAAK,YAAY;YAChB,OAAO,CAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAE,CAAC;YACzC,MAAM;QAEP,KAAK,aAAa;YACjB,OAAO,CAAE,OAAO,CAAE,CAAC;YACnB,MAAM;QAEP,KAAK,kBAAkB;YACtB,OAAO,CAAC,KAAK,CAAE,qBAAqB,EAAE,OAAO,CAAC,OAAO,CAAE,CAAC;YACxD,MAAM;QAEP,KAAK,mBAAmB;YACvB,WAAW,CAAE,OAAO,CAAE,CAAC;YACvB,MAAM;QAEP;YACC,WAAW,CAAE;gBACZ,IAAI,EAAE,mBAAmB;gBACzB,OAAO,EAAE,0BAA2B,OAA4B,CAAC,IAAI,GAAG;aACxE,CAAE,CAAC;YACJ,MAAM;KACP;AACF,CAAC;AAED,OAAO,EACN,SAAS,GACT,CAAC","sourcesContent":["import { startGame, changePlayer, endGame, setSendMessage } from './game.js';\r\n\r\nimport type {\r\n\tAnyServerMessage,\r\n} from '../common/messages.js';\r\n\r\n/**\r\n * Функция отправки сообщений на сервер\r\n */\r\ntype SendMessage = typeof import( './connection.js' ).sendMessage;\r\n\r\n/**\r\n * Обрабатывает сообщения от сервера\r\n * \r\n * @param sendMessage Функция отправки сообщений\r\n * @param data Пришедшие данные\r\n */\r\nfunction onMessage( sendMessage: SendMessage, data: unknown ): void\r\n{\r\n\tsetSendMessage( sendMessage )\r\n\t\r\n\tconst message = parseData( data );\r\n\t\r\n\tprocessMessage( sendMessage, message );\r\n}\r\n\r\n/**\r\n * Выполняет разбор пришедших с сервера данных\r\n * \r\n * @param data Пришедшие данные\r\n */\r\nfunction parseData( data: unknown ): AnyServerMessage\r\n{\r\n\tif ( typeof data !== 'string' )\r\n\t{\r\n\t\treturn {\r\n\t\t\ttype: 'incorrectResponse',\r\n\t\t\tmessage: 'Wrong data type',\r\n\t\t};\r\n\t}\r\n\t\r\n\ttry\r\n\t{\r\n\t\treturn JSON.parse( data );\r\n\t}\r\n\tcatch ( error )\r\n\t{\r\n\t\treturn {\r\n\t\t\ttype: 'incorrectResponse',\r\n\t\t\tmessage: 'Can\\'t parse JSON data: ' + error,\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * Выполняет действие, соответствующее полученному сообщению\r\n * \r\n * @param sendMessage Функция отправки сообщений\r\n * @param message Пришедшее сообщение\r\n */\r\nfunction processMessage( sendMessage: SendMessage, message: AnyServerMessage ): void\r\n{\r\n\tswitch ( message.type )\r\n\t{\r\n\t\tcase 'gameStarted':\r\n\t\t\tstartGame();\r\n\t\t\tchangePlayer( message.myTurn, message.gameField, message.color );\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase 'changePlayer':\r\n\t\t\tchangePlayer( message.myTurn, message.gameField, message.color );\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase 'gameResult':\r\n\t\t\tendGame( message.win ? 'win' : 'loose' );\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase 'gameAborted':\r\n\t\t\tendGame( 'abort' );\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase 'incorrectRequest':\r\n\t\t\tconsole.error( 'Incorrect request: ', message.message );\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase 'incorrectResponse':\r\n\t\t\tsendMessage( message );\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tdefault:\r\n\t\t\tsendMessage( {\r\n\t\t\t\ttype: 'incorrectResponse',\r\n\t\t\t\tmessage: `Unknown message type: \"${(message as AnyServerMessage).type}\"`,\r\n\t\t\t} );\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport {\r\n\tonMessage,\r\n};\r\n"]}