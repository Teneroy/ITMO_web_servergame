{"version":3,"file":"screens.js","sourceRoot":"","sources":["../../sources/client/screens.ts"],"names":[],"mappings":"AAGA,MAAM,OAAO,GAAG,UAAU,EAAE,CAAC;AAU7B,SAAS,UAAU;IAElB,MAAM,OAAO,GAAuB,QAAQ,CAAC,aAAa,CAAE,cAAc,CAAE,CAAC;IAE7E,IAAK,CAAC,OAAO,EACb;QACC,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;KAChD;IAED,MAAM,IAAI,GAAuB,QAAQ,CAAC,aAAa,CAAE,WAAW,CAAE,CAAC;IAEvE,IAAK,CAAC,IAAI,EACV;QACC,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;KAC7C;IAED,MAAM,MAAM,GAAuB,QAAQ,CAAC,aAAa,CAAE,aAAa,CAAE,CAAC;IAE3E,IAAK,CAAC,MAAM,EACZ;QACC,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;KAC/C;IAED,OAAO;QACN,OAAO;QACP,IAAI;QACJ,MAAM;KACN,CAAC;AACH,CAAC;AAOD,SAAS,UAAU,CAAE,MAAc;IAElC,KAAM,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAE,OAAO,CAAE,EACrD;QACC,KAAK,CAAC,MAAM,GAAG,CAAE,GAAG,KAAK,MAAM,CAAE,CAAC;KAClC;AACF,CAAC;AAKD,SAAS,gBAAgB;IAExB,KAAM,MAAM,MAAM,IAAI,MAAM,CAAC,MAAM,CAAE,OAAO,CAAE,EAC9C;QACC,IAAK,CAAC,MAAM,CAAC,MAAM,EACnB;YACC,OAAO,MAAM,CAAC;SACd;KACD;IAED,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;AAC/C,CAAC;AAED,OAAO,EACN,OAAO,EACP,UAAU,EACV,gBAAgB,GAChB,CAAC","sourcesContent":["/**\r\n * Экраны приложения\r\n */\r\nconst screens = getScreens();\r\n\r\n/**\r\n * Возможные экраны\r\n */\r\ntype Screen = keyof typeof screens;\r\n\r\n/**\r\n * Возвращает карту экранов приложения\r\n */\r\nfunction getScreens()\r\n{\r\n\tconst waiting: HTMLElement | null = document.querySelector( 'main.waiting' );\r\n\t\r\n\tif ( !waiting )\r\n\t{\r\n\t\tthrow new Error('Can\\'t find \"waiting\" screen');\r\n\t}\r\n\t\r\n\tconst game: HTMLElement | null = document.querySelector( 'main.game' );\r\n\t\r\n\tif ( !game )\r\n\t{\r\n\t\tthrow new Error('Can\\'t find \"game\" screen');\r\n\t}\r\n\t\r\n\tconst result: HTMLElement | null = document.querySelector( 'main.result' );\r\n\t\r\n\tif ( !result )\r\n\t{\r\n\t\tthrow new Error('Can\\'t find \"result\" screen');\r\n\t}\r\n\t\r\n\treturn {\r\n\t\twaiting,\r\n\t\tgame,\r\n\t\tresult,\r\n\t};\r\n}\r\n\r\n/**\r\n * Открывает указанный экран\r\n * \r\n * @param screen Название экрана, на который переключиться\r\n */\r\nfunction openScreen( screen: Screen ): void\r\n{\r\n\tfor ( const [key, value] of Object.entries( screens ) )\r\n\t{\r\n\t\tvalue.hidden = ( key !== screen );\r\n\t}\r\n}\r\n\r\n/**\r\n * Возвращает элемент текущего экрана\r\n */\r\nfunction getCurrentScreen(): (typeof screens)[keyof (typeof screens)]\r\n{\r\n\tfor ( const screen of Object.values( screens ) )\r\n\t{\r\n\t\tif ( !screen.hidden )\r\n\t\t{\r\n\t\t\treturn screen;\r\n\t\t}\r\n\t}\r\n\t\r\n\tthrow new Error('Can\\'t find current screen');\r\n}\r\n\r\nexport {\r\n\tscreens,\r\n\topenScreen,\r\n\tgetCurrentScreen,\r\n};\r\n\r\nexport type {\r\n\tScreen,\r\n};\r\n"]}