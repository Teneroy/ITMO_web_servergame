{"version":3,"file":"game.js","sourceRoot":"","sources":["../../sources/client/game.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,KAAK,UAAU,MAAM,mBAAmB,CAAC;AAChD,OAAO,KAAK,YAAY,MAAM,qBAAqB,CAAC;AAGpD,UAAU,CAAC,cAAc,CAAE,WAAW,CAAE,CAAC;AACzC,YAAY,CAAC,iBAAiB,CAAE,cAAc,CAAE,CAAC;AAKjD,IAAI,WAA2D,CAAC;AAOhE,SAAS,cAAc,CAAE,mBAAuC;IAE/D,WAAW,GAAG,mBAAmB,CAAC;AACnC,CAAC;AAOD,SAAS,WAAW,CAAE,IAAqB;IAE1C,WAAW,CAAE;QACZ,IAAI,EAAE,YAAY;QAClB,IAAI,EAAE,IAAI;KACV,CAAE,CAAC;AACL,CAAC;AAKD,SAAS,cAAc;IAEtB,WAAW,CAAE;QACZ,IAAI,EAAE,YAAY;KAClB,CAAE,CAAC;AACL,CAAC;AAKD,SAAS,SAAS;IAEjB,UAAU,CAAE,MAAM,CAAE,CAAC;AACtB,CAAC;AASD,SAAS,YAAY,CAAE,MAAe,EAAE,SAA+B,EAAE,KAAkB;IAE1F,UAAU,CAAC,MAAM,CAAE,MAAM,EAAE,SAAS,EAAE,KAAK,CAAE,CAAC;AAC/C,CAAC;AAOD,SAAS,OAAO,CAAE,MAAiC;IAElD,YAAY,CAAC,MAAM,CAAE,MAAM,CAAE,CAAC;IAC9B,UAAU,CAAE,QAAQ,CAAE,CAAC;AACxB,CAAC;AAED,OAAO,EACN,SAAS,EACT,YAAY,EACZ,OAAO,EACP,cAAc,GACd,CAAC","sourcesContent":["import { openScreen } from './screens.js';\r\nimport * as GameScreen from './screens/game.js';\r\nimport * as ResultScreen from './screens/result.js';\r\nimport {PlayerGameState, PlayerColor} from \"../common/messages\";\r\n\r\nGameScreen.setTurnHandler( turnHandler );\r\nResultScreen.setRestartHandler( restartHandler );\r\n\r\n/**\r\n * Отправляет сообщение на сервер\r\n */\r\nlet sendMessage: typeof import( './connection.js' ).sendMessage;\r\n\r\n/**\r\n * Устанавливает функцию отправки сообщений на сервер\r\n * \r\n * @param sendMessageFunction Функция отправки сообщений\r\n */\r\nfunction setSendMessage( sendMessageFunction: typeof sendMessage ): void\r\n{\r\n\tsendMessage = sendMessageFunction;\r\n}\r\n\r\n/**\r\n * Обрабатывает ход игрока\r\n * \r\n * @param move Загаданное пользователем число\r\n */\r\nfunction turnHandler( move: PlayerGameState ): void\r\n{\r\n\tsendMessage( {\r\n\t\ttype: 'playerMove',\r\n\t\tmove: move,\r\n\t} );\r\n}\r\n\r\n/**\r\n * Обрабатывает перезапуск игры\r\n */\r\nfunction restartHandler(): void\r\n{\r\n\tsendMessage( {\r\n\t\ttype: 'repeatGame',\r\n\t} );\r\n}\r\n\r\n/**\r\n * Начинает игру\r\n */\r\nfunction startGame(): void\r\n{\r\n\topenScreen( 'game' );\r\n}\r\n\r\n/**\r\n * Меняет активного игрока\r\n *\r\n * @param myTurn Ход текущего игрока?\r\n * @param gameField игровое поле\r\n * @param color\r\n */\r\nfunction changePlayer( myTurn: boolean, gameField: Array<Array<string>>, color: PlayerColor ): void\r\n{\r\n\tGameScreen.update( myTurn, gameField, color );\r\n}\r\n\r\n/**\r\n * Завершает игру\r\n * \r\n * @param result Результат игры\r\n */\r\nfunction endGame( result: 'win' | 'loose' | 'abort' ): void\r\n{\r\n\tResultScreen.update( result );\r\n\topenScreen( 'result' );\r\n}\r\n\r\nexport {\r\n\tstartGame,\r\n\tchangePlayer,\r\n\tendGame,\r\n\tsetSendMessage,\r\n};\r\n"]}